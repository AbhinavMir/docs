"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[105],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var o=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,o,l=function(e,t){if(null==e)return{};var r,o,l={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var p=o.createContext({}),s=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,l=e.mdxType,n=e.originalType,p=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=s(r),m=l,f=d["".concat(p,".").concat(m)]||d[m]||c[m]||n;return r?o.createElement(f,i(i({ref:t},u),{},{components:r})):o.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=r.length,i=new Array(n);i[0]=m;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a[d]="string"==typeof e?e:l,i[1]=a;for(var s=2;s<n;s++)i[s]=r[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1801:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>n,metadata:()=>a,toc:()=>s});var o=r(7462),l=(r(7294),r(3905));const n={sidebar_position:1,sidebar_label:"Building & deploying a rollup",description:"Build sovereign Cosmos-SDK and EVM applications."},i="Building a rollup and testnet deployment",a={unversionedId:"tutorials/building-and-deploying-a-rollup",id:"tutorials/building-and-deploying-a-rollup",title:"Building a rollup and testnet deployment",description:"Build sovereign Cosmos-SDK and EVM applications.",source:"@site/docs/tutorials/building-and-deploying-a-rollup.md",sourceDirName:"tutorials",slug:"/tutorials/building-and-deploying-a-rollup",permalink:"/pr-preview/pr-106/docs/tutorials/building-and-deploying-a-rollup",draft:!1,editUrl:"https://github.com/rollkit/docs/tree/main/docs/tutorials/building-and-deploying-a-rollup.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Building & deploying a rollup",description:"Build sovereign Cosmos-SDK and EVM applications."},sidebar:"tutorialSidebar",previous:{title:"Tutorials",permalink:"/pr-preview/pr-106/docs/category/tutorials"},next:{title:"Hello World",permalink:"/pr-preview/pr-106/docs/tutorials/hello-world"}},p={},s=[{value:"Support",id:"support",level:2}],u={toc:s};function d(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"building-a-rollup-and-testnet-deployment"},"Building a rollup and testnet deployment"),(0,l.kt)("p",null,"The following tutorials will help you get started building\nCosmos-SDK and EVM applications that connect to Celestia's data availability\n(DA) layer via Rollkit to Mocha testnet or Arabica devnet. We call\nthose chains Sovereign Rollups."),(0,l.kt)("p",null,"You can get started with the following tutorials:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/pr-preview/pr-106/docs/tutorials/hello-world"},"Hello World")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/pr-preview/pr-106/docs/tutorials/gm-world"},"GM World")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/pr-preview/pr-106/docs/tutorials/recipe-book"},"Recipe Book")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/pr-preview/pr-106/docs/tutorials/wordle"},"Wordle Game")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://rollkit.dev/docs/tutorials/cosmwasm"},"CosmWasm Tutorial")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://rollkit.dev/docs/tutorials/ethermint"},"Ethermint Tutorial")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.celestia.org/developers/full-stack-modular-development-guide"},"Full-Stack Modular Dapp with Celestia")),(0,l.kt)("li",{parentName:"ul"},"Coming Soon - Fuelmint Tutorial with Celestia")),(0,l.kt)("h2",{id:"support"},"Support"),(0,l.kt)("p",null,"The tutorials will explore developing with Rollkit,\nwhich is still in Alpha stage. If you run into bugs, please write a Github\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/rollkit/docs/issues/new"},"issue"),"\nor let us know in our ",(0,l.kt)("a",{parentName:"p",href:"https://discord.com/channels/638338779505229824/1065974175237414972"},"Discord"),'.\nFurthermore, while Rollkit allows you to build sovereign rollups\non Celestia, it currently does not support fraud proofs yet and is\ntherefore running in "pessimistic" mode, where nodes would need to\nre-execute the transactions to check the validity of the chain\n(i.e. a full node). Furthermore, Rollkit currently only supports\na single sequencer.'))}d.isMDXComponent=!0}}]);