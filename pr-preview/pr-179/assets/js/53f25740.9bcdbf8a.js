"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9048],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,g=m["".concat(s,".").concat(d)]||m[d]||c[d]||l;return n?a.createElement(g,r(r({ref:t},u),{},{components:n})):a.createElement(g,r({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,r=new Array(l);r[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:o,r[1]=i;for(var p=2;p<l;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294),o=n(6010);const l="tabItem_Ymn6";function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(l,r),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(7462),o=n(7294),l=n(6010),r=n(2389),i=n(7392),s=n(7094),p=n(2466);const u="tabList__CuJ",m="tabItem_LNqP";function c(e){const{lazy:t,block:n,defaultValue:r,values:c,groupId:d,className:g}=e,h=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=c??h.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),y=(0,i.l)(k,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===r?r:r??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==f&&!k.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:N,setTabGroupChoices:b}=(0,s.U)(),[v,w]=(0,o.useState)(f),C=[],{blockElementScrollPositionUntilNextRender:T}=(0,p.o5)();if(null!=d){const e=N[d];null!=e&&e!==v&&k.some((t=>t.value===e))&&w(e)}const I=e=>{const t=e.currentTarget,n=C.indexOf(t),a=k[n].value;a!==v&&(T(t),w(a),null!=d&&b(d,String(a)))},x=e=>{let t=null;switch(e.key){case"Enter":I(e);break;case"ArrowRight":{const n=C.indexOf(e.currentTarget)+1;t=C[n]??C[0];break}case"ArrowLeft":{const n=C.indexOf(e.currentTarget)-1;t=C[n]??C[C.length-1];break}}t?.focus()};return o.createElement("div",{className:(0,l.Z)("tabs-container",u)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},g)},k.map((e=>{let{value:t,label:n,attributes:r}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,key:t,ref:e=>C.push(e),onKeyDown:x,onClick:I},r,{className:(0,l.Z)("tabs__item",m,r?.className,{"tabs__item--active":v===t})}),n??t)}))),t?(0,o.cloneElement)(h.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==v})))))}function d(e){const t=(0,r.Z)();return o.createElement(c,(0,a.Z)({key:String(t)},e))}},651:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>m});var a=n(7462),o=(n(7294),n(3905)),l=n(5488),r=n(5162);const i={sidebar_label:"GM world tutorial",description:"Build a sovereign rollup with Ignite CLI, Celestia and Rollkit locally and on a testnet"},s="GM world rollup",p={unversionedId:"tutorials/gm-world",id:"tutorials/gm-world",title:"GM world rollup",description:"Build a sovereign rollup with Ignite CLI, Celestia and Rollkit locally and on a testnet",source:"@site/docs/tutorials/gm-world.md",sourceDirName:"tutorials",slug:"/tutorials/gm-world",permalink:"/pr-preview/pr-179/docs/tutorials/gm-world",draft:!1,editUrl:"https://github.com/rollkit/docs/tree/main/docs/tutorials/gm-world.md",tags:[],version:"current",frontMatter:{sidebar_label:"GM world tutorial",description:"Build a sovereign rollup with Ignite CLI, Celestia and Rollkit locally and on a testnet"},sidebar:"docs",previous:{title:"Building & deploying a rollup",permalink:"/pr-preview/pr-179/docs/tutorials/building-and-deploying-a-rollup"},next:{title:"GM world frontend tutorial",permalink:"/pr-preview/pr-179/docs/tutorials/gm-world-frontend"}},u={},m=[{value:"\u2600\ufe0f Introduction",id:"\ufe0f-introduction",level:2},{value:"\ud83e\udd14 What is GM?",id:"-what-is-gm",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"\ud83c\udfc3\xa0Install Golang on Linux",id:"install-golang-on-linux",level:4},{value:"\ud83d\udd25\xa0Install Ignite CLI on Linux",id:"install-ignite-cli-on-linux",level:4},{value:"\ud83c\udfc3\xa0Install Golang on macOS",id:"install-golang-on-macos",level:4},{value:"\ud83d\udd25\xa0Install Ignite CLI on macOS",id:"install-ignite-cli-on-macos",level:4},{value:"\ud83c\udf7a\xa0Install Homebrew on macOS",id:"install-homebrew-on-macos",level:4},{value:"\ud83c\udfc3\xa0Install wget and jq on macOS",id:"install-wget-and-jq-on-macos",level:4},{value:"Part one",id:"part-one",level:2},{value:"\ud83d\udcbb Prerequisites",id:"-prerequisites",level:3},{value:"\ud83c\udfe0 Running local devnet with a Rollkit rollup",id:"-running-local-devnet-with-a-rollkit-rollup",level:3},{value:"\ud83d\udd0e Query your balance",id:"-query-your-balance",level:3},{value:"\ud83d\udfe2 Start, stop, or remove your container",id:"-start-stop-or-remove-your-container",level:3},{value:"\ud83c\udfd7\ufe0f Building your sovereign rollup",id:"\ufe0f-building-your-sovereign-rollup",level:3},{value:"\ud83d\uddde\ufe0f Install Rollkit",id:"\ufe0f-install-rollkit",level:3},{value:"\u25b6\ufe0f Start your rollup",id:"\ufe0f-start-your-rollup",level:3},{value:"\ud83d\udd11 Keys",id:"-keys",level:4},{value:"\ud83d\udcb8 Transactions",id:"-transactions",level:4},{value:"\u2696\ufe0f Balances",id:"\ufe0f-balances",level:4},{value:"Part two",id:"part-two",level:2},{value:"\ud83e\udeb6\xa0Run a Celestia light node",id:"run-a-celestia-light-node",level:3},{value:"\ud83d\udcac\xa0Say gm world",id:"say-gm-world",level:3},{value:"\u270b\xa0Create your first query",id:"create-your-first-query",level:4},{value:"\ud83d\udce8\xa0Query request and response types",id:"query-request-and-response-types",level:4},{value:"\ud83d\udc4b\xa0Gm keeper function",id:"gm-keeper-function",level:4},{value:"\ud83d\udfe2\xa0Start your sovereign rollup",id:"start-your-sovereign-rollup",level:4},{value:"Clear previous chain history",id:"clear-previous-chain-history",level:5},{value:"Start the new chain",id:"start-the-new-chain",level:5}],c={toc:m};function d(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"gm-world-rollup"},"GM world rollup"),(0,o.kt)("h2",{id:"\ufe0f-introduction"},"\u2600\ufe0f Introduction"),(0,o.kt)("p",null,"In this tutorial, we will build a sovereign ",(0,o.kt)("inlineCode",{parentName:"p"},"gm-world")," rollup using Rollkit\nand Celestia\u2019s data availability and consensus layer to submit Rollkit blocks."),(0,o.kt)("p",null,"This tutorial will cover setting up Ignite CLI,\nbuilding a Cosmos-SDK application-specific rollup blockchain,\nand posting data to Celestia.\nFirst, we will test on a local DA network and then we will deploy to a live\ntestnet."),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk"},"Cosmos SDK")," is a framework for\nbuilding blockchain applications. The Cosmos Ecosystem uses\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cosmos/ibc-go"},"Inter-Blockchain Communication (IBC)"),"\nto allow blockchains to communicate with one another."),(0,o.kt)("p",null,"The development journey for your rollup will look something like this:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#part-one"},"Part one"),": Run your rollup and post DA to a local devnet, and make sure everything works as expected"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#part-two"},"Part two"),": Deploy the rollup, posting to a DA testnet. Confirm again that everything is functioning properly"),(0,o.kt)("li",{parentName:"ol"},"Coming soon: Deploy your rollup to the DA layer's mainnet")),(0,o.kt)("admonition",{title:"note",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This tutorial will explore developing with Rollkit,\nwhich is still in Alpha stage. If you run into bugs, please write a Github\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/rollkit/docs/issues/new"},"Issue ticket"),"\nor let us know in our ",(0,o.kt)("a",{parentName:"p",href:"https://t.me/rollkit"},"Telegram"),".")),(0,o.kt)("admonition",{title:"caution",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"The scripts for this tutorial are built for Celestia's\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.celestia.org/nodes/blockspace-race"},"Blockspacerace testnet"),".\nIf you choose to use Mocha testnet or Arabica devnet,\nyou will need to modify the script manually.")),(0,o.kt)("h2",{id:"-what-is-gm"},"\ud83e\udd14 What is GM?"),(0,o.kt)("p",null,'GM means good morning. It\'s GM o\'clock somewhere, so there\'s never a bad time\nto say GM, Gm, or gm. You can think of "GM" as the new version of\n"hello world".'),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Operating systems: GNU/Linux or macOS"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://go.dev"},"Golang")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ignite/cli"},"Ignite CLI v0.25.1")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://brew.sh"},"Homebrew")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.gnu.org/software/wget"},"wget")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://stedolan.github.io/jq"},"jq")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.celestia.org/nodes/light-node"},"A Celestia Light Node"))),(0,o.kt)(l.Z,{groupId:"network",mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"linux",label:"Linux",mdxType:"TabItem"},(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If you are only planning to complete ",(0,o.kt)("a",{parentName:"p",href:"#part-one"},"Part one"),",\nfeel free to skip to the ",(0,o.kt)("a",{parentName:"p",href:"#part-two"},"Part two"),"."),(0,o.kt)("p",{parentName:"admonition"},"Be sure to use the same testnet installation instructions through this\nentire tutorial.")),(0,o.kt)("h4",{id:"install-golang-on-linux"},"\ud83c\udfc3\xa0Install Golang on Linux"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/celestiaorg/celestia-app"},"Celestia-App"),",\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/celestiaorg/celestia-node"},"Celestia-Node"),",\nand ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk"},"Cosmos-SDK")," are\nwritten in the Golang programming language. You will need\nGolang to build and run them."),(0,o.kt)("p",null,"You can ",(0,o.kt)("a",{parentName:"p",href:"https://docs.celestia.org/nodes/environment#install-golang"},"install Golang here"),"."),(0,o.kt)("h4",{id:"install-ignite-cli-on-linux"},"\ud83d\udd25\xa0Install Ignite CLI on Linux"),(0,o.kt)("p",null,"First, you will need to create ",(0,o.kt)("inlineCode",{parentName:"p"},"/usr/local/bin")," if you have not already:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir -p -m 775 /usr/local/bin\n")),(0,o.kt)("p",null,"Run this command in your terminal to install Ignite CLI:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://get.ignite.com/cli! | bash\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"\u270b On some machines, you may run into permissions errors like the one below.\nYou can resolve this error by following the guidance\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.ignite.com/v0.25.2/guide/install#write-permission"},"here")," or below.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Error\njcs @ ~ % curl https://get.ignite.com/cli! | bash\n\n\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  3967    0  3967    0     0  16847      0 --:--:-- --:--:-- --:--:-- 17475\nInstalling ignite v0.25.1.....\n######################################################################## 100.0%\nmv: rename ./ignite to /usr/local/bin/ignite: Permission denied\n============\nError: mv failed\n")),(0,o.kt)("p",null,"The following command will resolve the permissions error:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo curl https://get.ignite.com/cli! | sudo bash\n")),(0,o.kt)("p",null,"A successful installation will return something similar the response below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  3967    0  3967    0     0  15586      0 --:--:-- --:--:-- --:--:-- 15931\nInstalling ignite v0.25.1.....\n######################################################################## 100.0%\nInstalled at /usr/local/bin/ignite\n")),(0,o.kt)("p",null,"Verify you\u2019ve installed Ignite CLI by running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ignite version\n")),(0,o.kt)("p",null,"The response that you receive should look something like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"jcs @ ~ % ignite version\nIgnite CLI version: v0.25.1\nIgnite CLI build date: 2022-10-20T15:52:00Z\nIgnite CLI source hash: cc393a9b59a8792b256432fafb472e5ac0738f7c\nCosmos SDK version: v0.46.3\nYour OS: darwin\nYour arch: arm64\nYour Node.js version: v18.10.0\nYour go version: go version go1.19.2 darwin/arm64\nYour uname -a: Darwin Joshs-MacBook-Air.local 21.6.0 Darwin Kernel Version 21.6.0: Mon Aug 22 20:20:07 PDT 2022; root:xnu-8020.140.49~2/RELEASE_ARM64_T8110 arm64\nYour cwd: /Users/joshstein\nIs on Gitpod: false\n"))),(0,o.kt)(r.Z,{value:"mac",label:"Mac",mdxType:"TabItem"},(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If you are only planning to complete ",(0,o.kt)("a",{parentName:"p",href:"#part-one"},"Part one"),",\nfeel free to skip to the ",(0,o.kt)("a",{parentName:"p",href:"#part-two"},"Part two"),"."),(0,o.kt)("p",{parentName:"admonition"},"Be sure to use the same testnet installation instructions through this\nentire tutorial.")),(0,o.kt)("h4",{id:"install-golang-on-macos"},"\ud83c\udfc3\xa0Install Golang on macOS"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/celestiaorg/celestia-app"},"Celestia-App"),",\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/celestiaorg/celestia-node"},"Celestia-Node"),",\nand ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk"},"Cosmos-SDK")," are\nwritten in the Golang programming language. You will need\nGolang to build and run them."),(0,o.kt)("p",null,"You can ",(0,o.kt)("a",{parentName:"p",href:"https://docs.celestia.org/nodes/environment#install-golang"},"install Golang here"),"."),(0,o.kt)("h4",{id:"install-ignite-cli-on-macos"},"\ud83d\udd25\xa0Install Ignite CLI on macOS"),(0,o.kt)("p",null,"First, you will need to create ",(0,o.kt)("inlineCode",{parentName:"p"},"/usr/local/bin")," if you have not already:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir -p -m 775 /usr/local/bin\n")),(0,o.kt)("p",null,"Run this command in your terminal to install Ignite CLI:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://get.ignite.com/cli! | bash\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"\u270b On some machines, you may run into permissions errors like the one below.\nYou can resolve this error by following the guidance\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.ignite.com/v0.25.2/guide/install#write-permission"},"here")," or below.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Error\njcs @ ~ % curl https://get.ignite.com/cli! | bash\n\n\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  3967    0  3967    0     0  16847      0 --:--:-- --:--:-- --:--:-- 17475\nInstalling ignite v0.25.1.....\n######################################################################## 100.0%\nmv: rename ./ignite to /usr/local/bin/ignite: Permission denied\n============\nError: mv failed\n")),(0,o.kt)("p",null,"The following command will resolve the permissions error:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo curl https://get.ignite.com/cli! | sudo bash\n")),(0,o.kt)("p",null,"A successful installation will return something similar the response below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  3967    0  3967    0     0  15586      0 --:--:-- --:--:-- --:--:-- 15931\nInstalling ignite v0.25.1.....\n######################################################################## 100.0%\nInstalled at /usr/local/bin/ignite\n")),(0,o.kt)("p",null,"Verify you\u2019ve installed Ignite CLI by running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ignite version\n")),(0,o.kt)("p",null,"The response that you receive should look something like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"jcs @ ~ % ignite version\nIgnite CLI version: v0.25.1\nIgnite CLI build date: 2022-10-20T15:52:00Z\nIgnite CLI source hash: cc393a9b59a8792b256432fafb472e5ac0738f7c\nCosmos SDK version: v0.46.3\nYour OS: darwin\nYour arch: arm64\nYour Node.js version: v18.10.0\nYour go version: go version go1.19.2 darwin/arm64\nYour uname -a: Darwin Joshs-MacBook-Air.local 21.6.0 Darwin Kernel Version 21.6.0: Mon Aug 22 20:20:07 PDT 2022; root:xnu-8020.140.49~2/RELEASE_ARM64_T8110 arm64\nYour cwd: /Users/joshstein\nIs on Gitpod: false\n")),(0,o.kt)("h4",{id:"install-homebrew-on-macos"},"\ud83c\udf7a\xa0Install Homebrew on macOS"),(0,o.kt)("p",null,"Homebrew will allow us to install dependencies for our Mac:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"\n')),(0,o.kt)("p",null,"Be sure to run the commands similar to the output below from the successful installation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"==> Next steps:\n- Run these three commands in your terminal to add Homebrew to your PATH:\n    echo '# Set PATH, MANPATH, etc., for Homebrew.' >> /Users/joshstein/.zprofile\n    echo 'eval \"$(/opt/homebrew/bin/brew shellenv)\"' >> /Users/joshstein/.zprofile\n    eval \"$(/opt/homebrew/bin/brew shellenv)\"\n")),(0,o.kt)("h4",{id:"install-wget-and-jq-on-macos"},"\ud83c\udfc3\xa0Install wget and jq on macOS"),(0,o.kt)("p",null,"wget is an Internet file retriever and jq is a lightweight and flexible\ncommand-line JSON processor."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"brew install wget && brew install jq\n")))),(0,o.kt)("h2",{id:"part-one"},"Part one"),(0,o.kt)("p",null,"This part of the tutorial will teach developers how to easily run a local data availability (DA) devnet on their own machine (or in the cloud).\n",(0,o.kt)("strong",{parentName:"p"},"Running a local devnet for DA to test your rollup is the recommended first step before deploying to a testnet."),"\nThis eliminates the need for testnet tokens and deploying to a testnet until you are ready."),(0,o.kt)("admonition",{title:"Note",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Part one of the tutorial has only been tested on an AMD machine running Ubuntu 22.10 x64.")),(0,o.kt)("p",null,"Whether you're a developer simply testing things on your laptop or using a virtual machine in the cloud,\nthis process can be done on any machine of your choosing. We tested out the Devnet section (Part one) on a machine with the following specs:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Memory: 1 GB RAM"),(0,o.kt)("li",{parentName:"ul"},"CPU: Single Core AMD"),(0,o.kt)("li",{parentName:"ul"},"Disk: 25 GB SSD Storage"),(0,o.kt)("li",{parentName:"ul"},"OS: Ubuntu 22.10 x64")),(0,o.kt)("h3",{id:"-prerequisites"},"\ud83d\udcbb Prerequisites"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.docker.com/get-docker"},"Docker")," installed on your machine")),(0,o.kt)("h3",{id:"-running-local-devnet-with-a-rollkit-rollup"},"\ud83c\udfe0 Running local devnet with a Rollkit rollup"),(0,o.kt)("p",null,"First, run the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/rollkit/local-celestia-devnet"},(0,o.kt)("inlineCode",{parentName:"a"},"local-celestia-devnet"))," by running the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --platform linux/amd64 -p 26650:26657 -p 26659:26659 ghcr.io/rollkit/local-celestia-devnet:v0.9.1\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Port 26657 on the Docker container in this example will be mapped to the local port 26650. This is to avoid clashing ports with\nthe Rollkit node, as we're running the devnet and node on one machine.")),(0,o.kt)("h3",{id:"-query-your-balance"},"\ud83d\udd0e Query your balance"),(0,o.kt)("p",null,"Open a new terminal instance. Check the balance on your account that you'll be using to post blocks to the\nlocal network, this will make sure you can post rollup blocks to your Celestia Devnet for DA & consensus:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://0.0.0.0:26659/balance\n")),(0,o.kt)("p",null,"You will see something like this, denoting your balance in TIA x 10",(0,o.kt)("sup",null,"-6"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{"denom":"utia","amount":"999995000000000"}\n')),(0,o.kt)("p",null,"If you want to be able to transpose your JSON results in a nicer format, you can install ",(0,o.kt)("a",{parentName:"p",href:"https://stedolan.github.io/jq/"},(0,o.kt)("inlineCode",{parentName:"a"},"jq")),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install jq\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"We'll need ",(0,o.kt)("inlineCode",{parentName:"p"},"jq")," later, so install it!")),(0,o.kt)("p",null,"Then run this to prettify the result:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://0.0.0.0:26659/balance | jq\n")),(0,o.kt)("p",null,"Here's what my response was when I wrote this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100    43  100    43    0     0   1730      0 --:--:-- --:--:-- --:--:--  1791\n{\n  "denom": "utia",\n  "amount": "999995000000000"\n}\n')),(0,o.kt)("p",null,"If you want to clean it up some more, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"-s")," option to run ",(0,o.kt)("inlineCode",{parentName:"p"},"curl")," in silent mode and not print the progress metrics:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -s -X GET http://0.0.0.0:26659/balance | jq\n")),(0,o.kt)("p",null,"Your result will now look like this, nice \ud83e\udee1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "denom": "utia",\n  "amount": "999995000000000"\n}\n')),(0,o.kt)("h3",{id:"-start-stop-or-remove-your-container"},"\ud83d\udfe2 Start, stop, or remove your container"),(0,o.kt)("p",null,"Find the Container ID that is running by using the command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps\n")),(0,o.kt)("p",null,"Then stop the container:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker stop CONTAINER_ID_or_NAME\n")),(0,o.kt)("p",null,"You can obtain the container ID or name of a stopped container using the ",(0,o.kt)("inlineCode",{parentName:"p"},"docker ps -a")," command, which will list all containers (running and stopped) and their details. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps -a\n")),(0,o.kt)("p",null,"This will give you an output similar to this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'CONTAINER ID   IMAGE                                            COMMAND            CREATED         STATUS         PORTS                                                                                                                         NAMES\nd9af68de54e4   ghcr.io/rollkit/local-celestia-devnet:v0.9.1   "/entrypoint.sh"   5 minutes ago   Up 2 minutes   1317/tcp, 9090/tcp, 0.0.0.0:26657->26657/tcp, :::26657->26657/tcp, 26656/tcp, 0.0.0.0:26659->26659/tcp, :::26659->26659/tcp   musing_matsumoto\n')),(0,o.kt)("p",null,"In this example, you can restart the container using either its container ID (",(0,o.kt)("inlineCode",{parentName:"p"},"d9af68de54e4"),") or name (",(0,o.kt)("inlineCode",{parentName:"p"},"musing_matsumoto"),"). To restart the container, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker start d9af68de54e4\n")),(0,o.kt)("p",null,"or"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker start musing_matsumoto\n")),(0,o.kt)("p",null,"If you ever would like to remove the container, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"docker rm")," command followed by the container ID or name."),(0,o.kt)("p",null,"Here is an example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker rm CONTAINER_ID_or_NAME\n")),(0,o.kt)("h3",{id:"\ufe0f-building-your-sovereign-rollup"},"\ud83c\udfd7\ufe0f Building your sovereign rollup"),(0,o.kt)("p",null,"Now that you have a Celestia devnet running, you are ready to install Golang. We will use Golang to build and run our Cosmos-SDK blockchain."),(0,o.kt)("p",null,"The Ignite CLI comes with scaffolding commands to make development of\nblockchains quicker by creating everything that is needed to start a new\nCosmos SDK blockchain."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.celestia.org/nodes/environment#install-golang"},"Install Golang")," (",(0,o.kt)("em",{parentName:"p"},"these commands are for amd64/linux"),"):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'cd $HOME\nver="1.19.1"\nwget "https://golang.org/dl/go$ver.linux-amd64.tar.gz"\nsudo rm -rf /usr/local/go\nsudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz"\nrm "go$ver.linux-amd64.tar.gz"\necho "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.bash_profile\nsource $HOME/.bash_profile\ngo version\n')),(0,o.kt)("p",null,"Now, use the following command to install Ignite CLI:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://get.ignite.com/cli! | bash\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If you have issues with installation, the full guide can be found ",(0,o.kt)("a",{parentName:"p",href:"https://get.ignite.com/cli"},"here")," or on ",(0,o.kt)("a",{parentName:"p",href:"https://docs.ignite.com"},"docs.ignite.com"),".\nThe above command was tested on ",(0,o.kt)("inlineCode",{parentName:"p"},"amd64/linux"),".")),(0,o.kt)("p",null,"Check your version:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ignite version\n")),(0,o.kt)("p",null,"Open a new tab or window in your terminal and run this command to\nscaffold your rollup. Scaffold the chain:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd $HOME\nignite scaffold chain gm --address-prefix gm\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"--address-prefix gm")," flag will change the address prefix from ",(0,o.kt)("inlineCode",{parentName:"p"},"cosmos")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"gm"),". Read more on the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/v0.46/basics/accounts.html"},"Cosmos docs"),".")),(0,o.kt)("p",null,"The response will look similar to below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"jcs @ ~ % ignite scaffold chain gm --address-prefix gm\n\n\u2b50\ufe0f Successfully created a new blockchain 'gm'.\n\ud83d\udc49 Get started with the following commands:\n\n % cd gm\n % ignite chain serve\n\nDocumentation: https://docs.ignite.com\n")),(0,o.kt)("p",null,"This command has created a Cosmos SDK blockchain in the ",(0,o.kt)("inlineCode",{parentName:"p"},"gm")," directory. The\n",(0,o.kt)("inlineCode",{parentName:"p"},"gm")," directory contains a fully functional blockchain. The following standard\nCosmos SDK ",(0,o.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/main/modules"},"modules")," have been\nimported:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"staking")," - for delegated Proof-of-Stake (PoS) consensus mechanism"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bank")," - for fungible token transfers between accounts"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"gov")," - for on-chain governance"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"mint")," - for minting new units of staking token"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"nft")," - for creating, transferring, and updating NFTs"),(0,o.kt)("li",{parentName:"ul"},"and ",(0,o.kt)("a",{parentName:"li",href:"https://docs.cosmos.network/main/architecture/adr-043-nft-module.html"},"more"))),(0,o.kt)("p",null,"Change to the ",(0,o.kt)("inlineCode",{parentName:"p"},"gm")," directory:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd gm\n")),(0,o.kt)("p",null,"You can learn more about the ",(0,o.kt)("inlineCode",{parentName:"p"},"gm")," directory\u2019s file structure ",(0,o.kt)("a",{parentName:"p",href:"https://docs.ignite.com/v0.25.2/guide/hello#blockchain-directory-structure"},"here"),".\nMost of our work in this tutorial will happen in the ",(0,o.kt)("inlineCode",{parentName:"p"},"x")," directory."),(0,o.kt)("h3",{id:"\ufe0f-install-rollkit"},"\ud83d\uddde\ufe0f Install Rollkit"),(0,o.kt)("p",null,"To swap out Tendermint for Rollkit, run the following command\nfrom inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"gm")," directory:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"go mod edit -replace github.com/cosmos/cosmos-sdk=github.com/rollkit/cosmos-sdk@v0.46.7-rollkit-v0.7.3-no-fraud-proofs\ngo mod edit -replace github.com/tendermint/tendermint=github.com/celestiaorg/tendermint@v0.34.22-0.20221202214355-3605c597500d\ngo mod tidy\ngo mod download\n")),(0,o.kt)("h3",{id:"\ufe0f-start-your-rollup"},"\u25b6\ufe0f Start your rollup"),(0,o.kt)("p",null,"Download the ",(0,o.kt)("inlineCode",{parentName:"p"},"init.sh")," script to start the chain:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# From inside the `gm` directory\nwget https://raw.githubusercontent.com/rollkit/docs/main/docs/scripts/gm/init-local.sh\n")),(0,o.kt)("p",null,"Run the ",(0,o.kt)("inlineCode",{parentName:"p"},"init-local.sh")," script:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bash init-local.sh\n")),(0,o.kt)("p",null,"This will start your rollup, connected to the local Celestia devnet you have running."),(0,o.kt)("p",null,"Now let's explore a bit."),(0,o.kt)("h4",{id:"-keys"},"\ud83d\udd11 Keys"),(0,o.kt)("p",null,"List your keys:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gmd keys list --keyring-backend test\n")),(0,o.kt)("p",null,"You should see an output like the following"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'- address: gm1sa3xvrkvwhktjppxzaayst7s7z4ar06rk37jq7\n  name: gm-key-2\n  pubkey: \'{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"AlXXb6Op8DdwCejeYkGWbF4G3pDLDO+rYiVWKPKuvYaz"}\'\n  type: local\n- address: gm13nf52x452c527nycahthqq4y9phcmvat9nejl2\n  name: gm-key\n  pubkey: \'{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"AwigPerY+eeC2WAabA6iW1AipAQora5Dwmo1SnMnjavt"}\'\n  type: local\n')),(0,o.kt)("h4",{id:"-transactions"},"\ud83d\udcb8 Transactions"),(0,o.kt)("p",null,"Now we can test sending a transaction from one of our keys to the other. We can do that with the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gmd tx bank send [from_key_or_address] [to_address] [amount] [flags]\n")),(0,o.kt)("p",null,"Set your keys as variables to make it easier to add the address:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export KEY1=gm1sa3xvrkvwhktjppxzaayst7s7z4ar06rk37jq7\nexport KEY2=gm13nf52x452c527nycahthqq4y9phcmvat9nejl2\n")),(0,o.kt)("p",null,"So using our information from the ",(0,o.kt)("a",{parentName:"p",href:"#keys"},"keys")," command, we can construct the transaction command like so to send 42069stake from one address to another:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gmd tx bank send $KEY1 $KEY2 42069stake --keyring-backend test\n")),(0,o.kt)("p",null,"You'll be prompted to accept the transaction:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'auth_info:\n  fee:\n    amount: []\n    gas_limit: "200000"\n    granter: ""\n    payer: ""\n  signer_infos: []\n  tip: null\nbody:\n  extension_options: []\n  memo: ""\n  messages:\n  - \'@type\': /cosmos.bank.v1beta1.MsgSend\n    amount:\n    - amount: "42069"\n      denom: stake\n    from_address: gm1sa3xvrkvwhktjppxzaayst7s7z4ar06rk37jq7\n    to_address: gm13nf52x452c527nycahthqq4y9phcmvat9nejl2\n  non_critical_extension_options: []\n  timeout_height: "0"\nsignatures: []\nconfirm transaction before signing and broadcasting [y/N]:\n')),(0,o.kt)("p",null,"Type ",(0,o.kt)("inlineCode",{parentName:"p"},"y")," if you'd like to confirm and sign the transaction. Then, you'll see the confirmation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'code: 0\ncodespace: ""\ndata: ""\nevents: []\ngas_used: "0"\ngas_wanted: "0"\nheight: "0"\ninfo: ""\nlogs: []\nraw_log: \'[]\'\ntimestamp: ""\ntx: null\ntxhash: 677CAF6C80B85ACEF6F9EC7906FB3CB021322AAC78B015FA07D5112F2F824BFF\n')),(0,o.kt)("h4",{id:"\ufe0f-balances"},"\u2696\ufe0f Balances"),(0,o.kt)("p",null,"Then, query your balance:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gmd query bank balances $KEY2\n")),(0,o.kt)("p",null,"This is the key that received the balance, so it should have increased past the initial ",(0,o.kt)("inlineCode",{parentName:"p"},"STAKING_AMOUNT"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'balances:\n- amount: "10000000000000000000042069"\n  denom: stake\npagination:\n  next_key: null\n  total: "0"\n')),(0,o.kt)("p",null,"The other key, should have decreased in balance:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gmd query bank balances $KEY1\n")),(0,o.kt)("p",null,"Response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'balances:\n- amount: "9999999999999999999957931"\n  denom: stake\npagination:\n  next_key: null\n  total: "0"\n')),(0,o.kt)("h2",{id:"part-two"},"Part two"),(0,o.kt)("h3",{id:"run-a-celestia-light-node"},"\ud83e\udeb6\xa0Run a Celestia light node"),(0,o.kt)("p",null,"Follow instructions to install and start your Celestia Data Availalbility\nlayer Light Node selecting the network that you had previously used. You can\nfind instructions to install and run the node ",(0,o.kt)("a",{parentName:"p",href:"https://docs.celestia.org/nodes/light-node"},"here"),"."),(0,o.kt)("p",null,"After you have Go and Ignite CLI installed, and your Celestia Light\nNode running on your machine, you're ready to build, test, and launch your own\nsovereign rollup."),(0,o.kt)("h3",{id:"say-gm-world"},"\ud83d\udcac\xa0Say gm world"),(0,o.kt)("p",null,"Now, we're going to get our blockchain to say ",(0,o.kt)("inlineCode",{parentName:"p"},"gm world!")," - in order to do so\nyou need to make the following changes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Modify a protocol buffer file"),(0,o.kt)("li",{parentName:"ul"},"Create a keeper query function that returns data")),(0,o.kt)("p",null,"Protocol buffer files contain proto RPC calls that define Cosmos SDK queries\nand message handlers, and proto messages that define Cosmos SDK types. The RPC\ncalls are also responsible for exposing an HTTP API."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Keeper")," is required for each Cosmos SDK module and is an abstraction for\nmodifying the state of the blockchain. Keeper functions allow us to query or\nwrite to the state."),(0,o.kt)("h4",{id:"create-your-first-query"},"\u270b\xa0Create your first query"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Open a new terminal instance that is not the\nsame that you started the chain in.")),(0,o.kt)("p",null,"In your new terminal, ",(0,o.kt)("inlineCode",{parentName:"p"},"cd")," into the ",(0,o.kt)("inlineCode",{parentName:"p"},"gm")," directory and run this command\nto create the ",(0,o.kt)("inlineCode",{parentName:"p"},"gm")," query:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ignite scaffold query gm --response text\n")),(0,o.kt)("p",null,"Response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"modify proto/gm/gm/query.proto\nmodify x/gm/client/cli/query.go\ncreate x/gm/client/cli/query_gm.go\ncreate x/gm/keeper/query_gm.go\n\n\ud83c\udf89 Created a query `gm`.\n")),(0,o.kt)("p",null,"What just happened? ",(0,o.kt)("inlineCode",{parentName:"p"},"query")," accepts the name of the query (",(0,o.kt)("inlineCode",{parentName:"p"},"gm"),"), an optional\nlist of request parameters (empty in this tutorial), and an optional\ncomma-separated list of response field with a ",(0,o.kt)("inlineCode",{parentName:"p"},"--response")," flag (",(0,o.kt)("inlineCode",{parentName:"p"},"text")," in this\ntutorial)."),(0,o.kt)("p",null,"Navigate to the ",(0,o.kt)("inlineCode",{parentName:"p"},"gm/proto/gm/gm/query.proto")," file, you\u2019ll see that ",(0,o.kt)("inlineCode",{parentName:"p"},"Gm")," RPC has\nbeen added to the ",(0,o.kt)("inlineCode",{parentName:"p"},"Query")," service:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:'title="gm/proto/gm/gm/query.proto"',title:'"gm/proto/gm/gm/query.proto"'},'service Query {\n  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {\n    option (google.api.http).get = "/gm/gm/params";\n  }\n    rpc Gm(QueryGmRequest) returns (QueryGmResponse) {\n        option (google.api.http).get = "/gm/gm/gm";\n    }\n}\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Gm")," RPC for the ",(0,o.kt)("inlineCode",{parentName:"p"},"Query")," service:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"is responsible for returning a ",(0,o.kt)("inlineCode",{parentName:"li"},"text")," string"),(0,o.kt)("li",{parentName:"ul"},"Accepts request parameters (",(0,o.kt)("inlineCode",{parentName:"li"},"QueryGmRequest"),")"),(0,o.kt)("li",{parentName:"ul"},"Returns response of type ",(0,o.kt)("inlineCode",{parentName:"li"},"QueryGmResponse")),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"option")," defines the endpoint that is used by gRPC to generate an HTTP API")),(0,o.kt)("h4",{id:"query-request-and-response-types"},"\ud83d\udce8\xa0Query request and response types"),(0,o.kt)("p",null,"In the same file, we will find:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"QueryGmRequest")," is empty because it does not require parameters"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"QueryGmResponse")," contains ",(0,o.kt)("inlineCode",{parentName:"li"},"text")," that is returned from the chain")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:'title="gm/proto/gm/gm/query.proto"',title:'"gm/proto/gm/gm/query.proto"'},"message QueryGmRequest {\n}\n\nmessage QueryGmResponse {\n  string text = 1;\n}\n")),(0,o.kt)("h4",{id:"gm-keeper-function"},"\ud83d\udc4b\xa0Gm keeper function"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"gm/x/gm/keeper/query_gm.go")," file contains the ",(0,o.kt)("inlineCode",{parentName:"p"},"Gm")," keeper function that\nhandles the query and returns data."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="gm/x/gm/keeper/query_gm.go"',title:'"gm/x/gm/keeper/query_gm.go"'},'func (k Keeper) Gm(goCtx context.Context, req *types.QueryGmRequest) (*types.QueryGmResponse, error) {\n    if req == nil {\n        return nil, status.Error(codes.InvalidArgument, "invalid request")\n    }\n    ctx := sdk.UnwrapSDKContext(goCtx)\n    _ = ctx\n    return &types.QueryGmResponse{}, nil\n}\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Gm")," function performs the following actions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Makes a basic check on the request and throws an error if it\u2019s ",(0,o.kt)("inlineCode",{parentName:"li"},"nil")),(0,o.kt)("li",{parentName:"ul"},"Stores context in a ",(0,o.kt)("inlineCode",{parentName:"li"},"ctx")," variable that contains information about the\nenvironment of the request"),(0,o.kt)("li",{parentName:"ul"},"Returns a response of type ",(0,o.kt)("inlineCode",{parentName:"li"},"QueryGmResponse"))),(0,o.kt)("p",null,"Currently, the response is empty and you'll need to update the keeper function."),(0,o.kt)("p",null,"Our ",(0,o.kt)("inlineCode",{parentName:"p"},"query.proto")," file defines that the response accepts ",(0,o.kt)("inlineCode",{parentName:"p"},"text"),". Use your text\neditor to modify the keeper function in ",(0,o.kt)("inlineCode",{parentName:"p"},"gm/x/gm/keeper/query_gm.go")," ."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="gm/x/gm/keeper/query_gm.go"',title:'"gm/x/gm/keeper/query_gm.go"'},'func (k Keeper) Gm(goCtx context.Context, req *types.QueryGmRequest) (*types.QueryGmResponse, error) {\n    if req == nil {\n        return nil, status.Error(codes.InvalidArgument, "invalid request")\n    }\n    ctx := sdk.UnwrapSDKContext(goCtx)\n    _ = ctx\n    return &types.QueryGmResponse{Text: "gm world!"}, nil\n}\n')),(0,o.kt)("h4",{id:"start-your-sovereign-rollup"},"\ud83d\udfe2\xa0Start your sovereign rollup"),(0,o.kt)("admonition",{title:"caution",type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"Before starting our rollup, we'll need to find and change\n",(0,o.kt)("inlineCode",{parentName:"p"},"FlagIAVLFastNode")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"FlagDisableIAVLFastNode"),":"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="gm/cmd/gmd/cmd/root.go"',title:'"gm/cmd/gmd/cmd/root.go"'},"baseapp.SetIAVLDisableFastNode(cast.ToBool(appOpts.Get(server.FlagDisableIAVLFastNode))),\n"))),(0,o.kt)("p",null,"We have a handy ",(0,o.kt)("inlineCode",{parentName:"p"},"init-testnet.sh")," found in this repo\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/rollkit/docs/tree/main/docs/scripts/gm"},"here"),"."),(0,o.kt)("p",null,"We can copy it over to our directory with the following commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# From inside the `gm` directory\nwget https://raw.githubusercontent.com/rollkit/docs/main/docs/scripts/gm/init-testnet.sh\n")),(0,o.kt)("p",null,"This copies over our ",(0,o.kt)("inlineCode",{parentName:"p"},"init-testnet.sh")," script to initialize our\n",(0,o.kt)("inlineCode",{parentName:"p"},"gm")," rollup."),(0,o.kt)("p",null,"You can view the contents of the script to see how we\ninitialize the gm rollup."),(0,o.kt)("h5",{id:"clear-previous-chain-history"},"Clear previous chain history"),(0,o.kt)("p",null,"Before starting the rollup, we need to remove the old project folders:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd $HOME\nrm -r go/bin/gmd && rm -rf .gm\n")),(0,o.kt)("h5",{id:"start-the-new-chain"},"Start the new chain"),(0,o.kt)("p",null,"Now, you can initialize the script with the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bash init-testnet.sh\n")),(0,o.kt)("p",null,"With that, we have kickstarted our second ",(0,o.kt)("inlineCode",{parentName:"p"},"gmd")," network!"),(0,o.kt)("p",null,"The\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"query"),"\xa0command has also scaffolded\n",(0,o.kt)("inlineCode",{parentName:"p"},"x/gm/client/cli/query_gm.go"),"\xa0that\nimplements a CLI equivalent of the gm query and mounted this command in\n",(0,o.kt)("inlineCode",{parentName:"p"},"x/gm/client/cli/query.go"),"."),(0,o.kt)("p",null,"In a separate window, run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gmd q gm gm\n")),(0,o.kt)("p",null,"We will get the following JSON response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"text: gm world!\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"4.png",src:n(7388).Z,width:"1064",height:"862"})),(0,o.kt)("p",null,"Congratulations \ud83c\udf89 you've successfully built your first rollup and queried it!"),(0,o.kt)("p",null,"If you're interested in looking at the demo repository\nfor this tutorial, you can at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/rollkit/gm"},"https://github.com/rollkit/gm"),"."))}d.isMDXComponent=!0},7388:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/4-856eac0d6cc770f822920d687f38f9e7.png"}}]);