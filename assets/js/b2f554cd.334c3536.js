"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"lets-roll-community-call","metadata":{"permalink":"/blog/lets-roll-community-call","editUrl":"https://github.com/rollkit/docs/tree/main/blog/lets-roll.mdx","source":"@site/blog/lets-roll.mdx","title":"Let\'s Roll - Rollkit\'s community call","description":"Rollkit is kicking off its community call, Let\'s Roll, to bring together community members to share knowledge, collaborate on new ideas, and inspire each other to push the limits of what\'s possible with Rollkit.","date":"2023-03-09T20:06:42.000Z","formattedDate":"March 9, 2023","tags":[{"label":"Rollkit","permalink":"/blog/tags/rollkit"}],"readingTime":3.245,"hasTruncateMarker":false,"authors":[{"name":"Joseph Al-Chami","url":"https://github.com/AlCJoseph","imageURL":"https://github.com/AlCJoseph.png","key":"AlCJoseph"}],"frontMatter":{"slug":"lets-roll-community-call","title":"Let\'s Roll - Rollkit\'s community call","authors":["AlCJoseph"],"tags":["Rollkit"],"description":"Rollkit is kicking off its community call, Let\'s Roll, to bring together community members to share knowledge, collaborate on new ideas, and inspire each other to push the limits of what\'s possible with Rollkit."},"nextItem":{"title":"Sovereign rollups on Bitcoin with Rollkit","permalink":"/blog/sovereign-rollups-on-bitcoin"}},"content":"![Rollkit blog cover](../static/img/lets-roll/lets-roll.jpg)\\n\\nLast Sunday, we released the first [research implementation](https://rollkit.dev/blog/sovereign-rollups-on-bitcoin/) that allows Rollkit rollups to use Bitcoin for data availability. \\n\\n[This announcement](https://twitter.com/RollkitDev/status/1632438374513676288) has sparked a lot of curiosity and excitement in the community. Many developers are starting to imagine what the future of sovereign rollups could look like on Bitcoin and other data availability layers. They\u2019re looking for ways to innovate using this integration, to replicate it on other layer 1 blockchains, to identify challenges and to suggest improvements.\\n \\nWe believe that there\u2019s a lot of innovation to be done and a lot of challenges to be solved, and that together as a community, we can collaborate on building the future of rollup frameworks.\\n\\nThat\u2019s why we\u2019re happy to announce that we\u2019re launching a Rollkit\u2019s community call: Let\u2019s Roll.\\n\\n## TL;DR\\n\\n* Rollkit is launching its community call, Let\u2019s Roll. You can subscribe to the community calendar [here](https://calendar.google.com/calendar/u/0/embed?src=c_11a8d6a470ca9c07b131ab1ea213ac124a3061a9d6986bb208d88afbcc4bb3d2@group.calendar.google.com&ctz=America/Toronto)\\n\\n* The first meeting is scheduled on [Zoom](https://us06web.zoom.us/j/83308619122) for March 21, 2023, 6pm CET(12pm EST, 9am PST).\\n\\n* Builders using Rollkit can now present their projects at Let\u2019s Roll. Reach out to us on [Telegram](https://t.me/rollkit) \\n\\n## Just merge it\\n\\nRollup development is rapidly evolving, with new types of rollups such as sovereign and pessimistic rollups emerging, and with new possibilities of using layer 1-blockchains as data availability layers. Rollkit is at the forefront of the rollup movement offering a modular framework for rollups as an open-source public good. \\n\\nHowever, Rollkit\'s true potential lies in its community of developers and users who bring their unique perspectives, skills, and expertise to the table. When Rollkit integrates a new data availability layer, its community members are best suited to improve this integration and use it in ways that truly benefit the community. Therefore, we invite developers from different communities and skill sets to join us and contribute to Rollkit\u2019s development.\\n\\nBy contributing to Rollkit, we reduce fragmentation, duplicated features and bugs, and we ensure the continuous improvement of Rollkit. By doing that we forge a stronger and bigger community. \\n\\nOne framework is bigger than the sum of all its forks. Together we can build something for all developers and builders to easily use.\\n\\nOur promise, as core contributors, is to do our best to make \u201cjust merge it\u201d a reality. We strive to empower developers to contribute to Rollkit and ensure that their contributions are integrated. \\n\\nThat\'s why we believe it\'s time to bring our community together to share knowledge, collaborate on new ideas, and inspire each other to push the limits of what\'s possible with Rollkit.\\n\\n## What is Let\u2019s Roll?\\n\\nLet\'s Roll is a dynamic community-focused meeting that brings together all Rollkit\u2019s contributors to drive the innovation and development of Rollkit.\\n\\nThis meeting serves as a platform for sharing knowledge, discussing the latest updates, and exploring new ideas. Rollkit\'s contributors will demonstrate the most recent features and advancements, while community members will have the chance to ask questions, provide feedback, and collaborate on new projects.\\n\\nBuilding open source means encouraging collaboration and teamwork among all developers. Sharing code and ideas will help us build a better framework more efficiently.\\n\\nThe meeting will be hosted on [Zoom](https://us06web.zoom.us/j/83308619122). Subscribe to the following [Google calendar](https://calendar.google.com/calendar/u/0/r?cid=c_11a8d6a470ca9c07b131ab1ea213ac124a3061a9d6986bb208d88afbcc4bb3d2@group.calendar.google.com) so that you can be notified of future community calls.\\n\\n## Conclusion\\n\\nLet\'s Roll is an exciting opportunity for the Rollkit community to come together, share ideas, and collaborate on the future of this powerful framework.\\nWith demos of the latest developments, a discussion of the roadmap and vision, and a dedicated Q&A and feedback session, Let\'s Roll is an opportunity to stay informed and engaged with the project.\\n\\nWe invite everyone interested in Rollkit and rollup development to join us. Your feedback, ideas, and input are essential to the success of Rollkit, and we look forward to seeing what we can achieve together.\\n\\nSo, join us, roll with us, and let\'s shape the future of rollup frameworks together."},{"id":"sovereign-rollups-on-bitcoin","metadata":{"permalink":"/blog/sovereign-rollups-on-bitcoin","editUrl":"https://github.com/rollkit/docs/tree/main/blog/2023-03-5-sovereign-rollups-on-bitcoin-with-rollkit.mdx","source":"@site/blog/2023-03-5-sovereign-rollups-on-bitcoin-with-rollkit.mdx","title":"Sovereign rollups on Bitcoin with Rollkit","description":"Last week, we introduced Rollkit, a modular framework for rollups. Today, we are proud to announce that Rollkit is the first rollup framework to support sovereign rollups on Bitcoin. This allows Rollkit rollups to use Bitcoin for data availability. The implementation is in alpha, but we invite curious developers to experiment with it.","date":"2023-03-05T00:00:00.000Z","formattedDate":"March 5, 2023","tags":[{"label":"Rollkit","permalink":"/blog/tags/rollkit"},{"label":"Bitcoin","permalink":"/blog/tags/bitcoin"}],"readingTime":4.32,"hasTruncateMarker":false,"authors":[{"name":"Rollkit","url":"https://github.com/rollkit","imageURL":"https://github.com/rollkit.png","key":"rollkit"}],"frontMatter":{"slug":"sovereign-rollups-on-bitcoin","title":"Sovereign rollups on Bitcoin with Rollkit","authors":["rollkit"],"tags":["Rollkit","Bitcoin"],"description":"Last week, we introduced Rollkit, a modular framework for rollups. Today, we are proud to announce that Rollkit is the first rollup framework to support sovereign rollups on Bitcoin. This allows Rollkit rollups to use Bitcoin for data availability. The implementation is in alpha, but we invite curious developers to experiment with it."},"prevItem":{"title":"Let\'s Roll - Rollkit\'s community call","permalink":"/blog/lets-roll-community-call"},"nextItem":{"title":"Introducing Rollkit: a modular rollup framework","permalink":"/blog/introducing-rollkit"}},"content":"![rollkit-bitcoin](../static/img/bitcoin-rollkit/rollkit-bitcoin.png)\\n\\nLast week, we introduced Rollkit, a modular framework for rollups. Today, we are proud to announce that Rollkit is the first rollup framework to support sovereign rollups on Bitcoin. An early research implementation allows Rollkit rollups to use Bitcoin for data availability.\\n\\nRollkit is opening the door for developers to create rollups with arbitrary execution environments that inherit Bitcoin\u2019s data availability guarantees and re-org resistance. With the new integration it is now possible to run the [EVM on Bitcoin as a Rollkit sovereign rollup](/docs/tutorials/bitcoin). Sovereign rollups on Bitcoin not only expand the possibilities for rollups, but also have the potential to help bootstrap a healthy blockspace fee market on Bitcoin, enabling a more sustainable security budget.\\n\\n## Tl;dr\\n\\n- Sovereign rollups using Bitcoin for data availability are now a reality with Rollkit\u2019s new early research integration.\\n- Follow along with a [demo](#evm-on-bitcoin-demo) of the EVM running on Bitcoin as a sovereign Rollkit rollup.\\n- The implementation was possible due to Bitcoin\'s Taproot upgrade and Ordinals\' usage of Bitcoin for publishing arbitrary data.\\n\\n## Posting data on Bitcoin with Taproot\\n\\nOn Feb. 1, 2023, the Luxor mining pool mined the largest Bitcoin block (#774628) ever, approximately 4 MB. Most of the blockspace was used to inscribe a Taproot Wizards NFT with [Ordinals](https://ordinals.com/), a project that implements NFTs on Bitcoin by publishing the image data on-chain.\\n\\nBitcoin NFTs use Taproot witnesses to inscribe arbitrary data, enabled by Bitcoin\'s Taproot upgrade. Taproot witnesses provide a slightly better payload-to-data ratio than SegWit transactions. A standard transaction can include up to around 390kB of arbitrary data while still passing through the public mempool. A non-standard transaction, included by a miner directly without passing through the mempool, can include close to 4MB of arbitrary data. In short, with SegWit, it became viable to post big blobs of data to the Bitcoin blockchain.\\n\\nSince then, the usage of Ordinals for NFT inscriptions and Taproot utilization has [kicked off](https://dune.com/dataalways/ordinals). Eric Wall found that at the time of [his tweet](https://twitter.com/ercwl/status/1619671451417862145), posting data on Bitcoin was 7x cheaper than Ethereum. Now that there are thousands of inscriptions on Bitcoin, it has become clear that sovereign rollups and an ecosystem of dapps on Bitcoin could become a reality. The missing piece: a rollup framework for easily integrating Bitcoin as a data availability layer.\\n\\n## Integrating Bitcoin as a data availability layer into Rollkit\\n\\nRollkit is a modular framework for rollups, where developers can plug-in custom execution layers and data availability layers. Initially, Rollkit only supported Celestia as an option for data availability and consensus. Now, Bitcoin is an option, thanks to an early research implementation of a Bitcoin data availability module for Rollkit. In this case, sovereign rollups manage their own execution and settlement while offloading consensus and data availability to Bitcoin.\\n\\n![rollkit-bitcoin-rollup](../static/img/bitcoin-rollkit/rollkit-bitcoin-1.png)\\n\\n## How Rollkit posts data to Bitcoin\\n\\nTo write and read data on Bitcoin, we make use of Taproot transactions. To facilitate this, we implemented [a Go package called `bitcoin-da`](https://github.com/rollkit/bitcoin-da) that provides a reader/writer interface to Bitcoin. For details of how the interface works and how it uses Taproot, see [the specs](https://github.com/rollkit/rollkit-btc/blob/main/spec.md). The package can be re-used by any project that wants to read or write data on Bitcoin.\\n\\nRollkit was built with modularity at its core. It has a data availability interface so that developers can simply implement specific methods to add a new data availability layer. To add a data availability layer, implementers need to satisfy the `DataAvailabilityLayerClient` interface which defines the behavior of the data availability client, and the `BlockRetriever` interface which defines how blocks can be synced. These interfaces live in the [da package](https://github.com/rollkit/rollkit/tree/main/da). The most important methods in these interfaces are `SubmitBlock` and `RetrieveBlock` for reading and writing the blocks.\\n\\nAfter implementing the Taproot reader/writer interface for Bitcoin (`bitcoin-da`), adding it as a data availability module for Rollkit took less than a day. We mostly only had to implement the `SubmitBlock` and `RetrieveBlocks` functions for Rollkit to call the `Read` and `Write` methods in `bitcoin-da`.\\n\\n![rollkit-bitcoin-rollup-2](../static/img/bitcoin-rollkit/rollkit-bitcoin-2.png)\\n\\n## EVM on Bitcoin demo\\n\\nRollkit supports custom execution layers, including EVM, CosmWasm, or the Cosmos SDK. To test the integration, we used Rollkit to run the EVM (using Ethermint) as a sovereign rollup on a local Bitcoin test network. See below for a demo.\\n\\n<div class=\\"youtube-wrapper\\">\\n  <iframe\\n     class=\\"youtube-video\\"\\n     title=\\"Rollkit: Ethermint + Bitcoin DA demo\\"\\n     src=\\"https://www.youtube.com/embed/qBKFEctzgT0\\"\\n     allowfullscreen\\n  >\\n  </iframe>\\n</div>\\n\\n## Conclusion\\n\\nAs we move towards a future where sovereign communities will form around different applications, asking them to incur the high cost and overhead of deploying a layer 1 blockchain to be sovereign is not sustainable. [Sovereign rollups](https://blog.celestia.org/sovereign-rollup-chains/) fix this by making it possible to deploy a sovereign chain that inherits the data availability and consensus of another layer 1 chain such as Bitcoin.\\n\\nOur goal with Rollkit is to make it easy to build and customize rollups. We invite you to play around Rollkit and build sovereign rollups on Bitcoin, or customize Rollkit with different execution environments and data availability layers. For details on how to run Rollkit with the Bitcoin data availability module, see the instructions [here](/docs/tutorials/bitcoin). Keep in mind that the integration is an early research implementation and it is not yet production-ready!\\n\\nModularism, not maximalism."},{"id":"introducing-rollkit","metadata":{"permalink":"/blog/introducing-rollkit","editUrl":"https://github.com/rollkit/docs/tree/main/blog/2023-02-21-introducing-rollkit.mdx","source":"@site/blog/2023-02-21-introducing-rollkit.mdx","title":"Introducing Rollkit: a modular rollup framework","description":"Neutral and independent from Celestia, Rollkit serves as a community-led public good that empowers developers with the freedom to deploy throughout the modular stack and accelerate innovation","date":"2023-02-21T00:00:00.000Z","formattedDate":"February 21, 2023","tags":[{"label":"Rollkit","permalink":"/blog/tags/rollkit"},{"label":"Celestia","permalink":"/blog/tags/celestia"}],"readingTime":5.985,"hasTruncateMarker":false,"authors":[{"name":"Joseph Al-Chami","url":"https://github.com/AlCJoseph","imageURL":"https://github.com/AlCJoseph.png","key":"AlCJoseph"},{"name":"Alex Beckett","url":"https://github.com/alex-beckett","imageURL":"https://github.com/alex-beckett.png","key":"alex-beckett"}],"frontMatter":{"slug":"introducing-rollkit","title":"Introducing Rollkit: a modular rollup framework","authors":["AlCJoseph","alex-beckett"],"tags":["Rollkit","Celestia"],"description":"Neutral and independent from Celestia, Rollkit serves as a community-led public good that empowers developers with the freedom to deploy throughout the modular stack and accelerate innovation"},"prevItem":{"title":"Sovereign rollups on Bitcoin with Rollkit","permalink":"/blog/sovereign-rollups-on-bitcoin"}},"content":"_The original version of this blog post can be found on the [Celestia blog](https://blog.celestia.org/introducing-rollkit-a-modular-rollup-framework/)._\\n\\n![Rollkit blog cover](../static/img/introducing-rollkit/rollkit-blog-cover.png)\\n\\nToday, we\u2019re pleased to introduce Rollkit, previously known as Rollmint. Rollkit is a modular rollup framework that gives developers the freedom to deploy rollups throughout the modular stack, opening new possibilities for rapid experimentation and innovation.\\n\\nRollkit provides a modular node for running rollups on top of a data availability layer. It exposes an ABCI-compatible client interface that can be used as a replacement for Tendermint for any [ABCI](https://github.com/informalsystems/tendermint/tree/main/abci)-compatible blockchain app, including Cosmos chains.\\n\\nIn development since 2021, Rollkit is now emerging as neutral and independent from the Celestia blockchain. Rollkit will serve as a community-led public good for the modular ecosystem going forward, with its own docs site at [rollkit.dev](/).\\n\\n## Tl;dr:\\n\\n- You can now [build with Rollkit](/) on Celestia\u2019s Mocha testnet. Check out the [docs](/)\\n- You can customize rollups and plug-in arbitrary data availability and execution layers by leveraging Rollkit\u2019s modular framework\\n- Join our Rollkit developer calls that begin in April to help guide its development\\n\\n## Deploying a new chain is hard\\n\\nDeploying your decentralized application as a smart contract on a shared blockchain means it will share computational resources and is restricted to that blockchain\'s execution environment. This limits your application\'s scalability and flexibility.\\n\\nFor that reason, many developers have turned to launching their own layer 1 chains using tools like Tendermint and the Cosmos SDK. However, deploying a new layer 1 chain presents its own set of complex challenges and trade-offs.\\n\\nIn order to deploy a new layer 1 chain, a developer must gather a set of validators to secure the chain, issue a token to compensate these validators, and continuously maintain the network infrastructure. This represents a huge cost in social coordination, time, capital and expertise. This cost prevents many developers from launching their own chains and innovation from progressing as quickly as it could.\\n\\n## Freedom to deploy\\n\\nRollups are the answer to this problem. Rollups provide similar advantages as a layer 1 blockchain but reduce the overhead of deploying and maintaining your own chain.\\n\\n![Rollkit comparison table](../static/img/introducing-rollkit/comparison-table.png)\\n\\nRollups provide similar benefits to blockchain developers that cloud infrastructure provides for traditional web developers. Deploying a new layer 1 blockchain is like maintaining a physical server, slow and expensive. Rollups remove the need for blockchain developers to launch and maintain their own layer 1s to deploy their own chain.\\n\\nWith Rollkit, developers no longer have to worry about the complex challenges of deploying a new blockchain. Rollkit will do for rollup chains what Tendermint did for layer 1 chains. The way it works is that rollups leverage an underlying layer for consensus, so that developers don\u2019t need to build their own consensus networks. Rollkit rollups inherit security from the data availability layer, eliminating the need for a full set of validators and reducing the technical barrier for developers.\\n\\n## Vision for Rollkit\\n\\nIn the spirit of modularity, Rollkit\u2019s long-term vision is to give developers a variety of options to choose from so that they can easily plug-in, switch or replace features in Rollkit.\\n\\nIn a rapidly evolving industry like blockchain, time to market and the ability to rapidly experiment and innovate are critical. Rollkit\u2019s customizable stack will enable developers to bring their products to market faster and with more flexibility.\\n\\n![Rollkit lego image](../static/img/introducing-rollkit/rollkit-lego.png)\\n\\n### Execution environments\\n\\nRollkit will allow you to easily swap in different execution environments. Not fond of the Cosmos SDK? Try Rust with CosmWasm. Still like Solidity? Plug in the EVM. None of the options suit your needs? Modify or add your own execution environment without needing to rebuild your entire chain from scratch.\\n\\n### Sequencers\\n\\nRollkit will support multiple sequencing modes to suit your specific use case. A single sequencer might be all you need. If your application requires stronger liveness, you can opt for multiple sequencers using your own set or leverage a set of shared sequencers.\\n\\n### Proof schemes\\n\\nRollkit will support a multitude of proof schemes to ensure the execution of your rollup. Run your application in zk mode, optimistic mode with fraud proofs, or pessimistic mode without any proofs.\\n\\n### Rollup types\\n\\nRollkit will allow you to build a diverse range of rollups, including sovereign rollups, settlement rollups and settled rollups.\\n\\nRollkit is in an early stage of development and many features remain to be built to reach this vision. In its [current state](/docs/rollkit-stack), Rollkit rollups are [sovereign rollups](https://blog.celestia.org/sovereign-rollup-chains) with single sequencers, with support for a pessimistic mode and a [work-in-progress optimistic mode](https://github.com/rollkit/rollkit/blob/manav/state_fraud_proofs_adr/docs/lazy-adr/adr-009-state-fraud-proofs.md). [Integration tutorials](/docs/category/tutorials) are ready and available with Cosmos SDK, Ethermint, and CosmWasm.\\n\\nWe invite the community to collaborate with us to build new features. Each new team that joins the growing Rollkit community brings more firepower to ship new features that we all benefit from. This is the power of modularity in action. \\n\\n## Rollkit is neutral\\n\\nCelestia Labs originally started developing Rollkit in 2021, when the modular ecosystem was nascent and general-purpose rollup software did not exist. We started building Rollkit out of necessity, because having general-purpose software for rollup chains was critical to the Celestia mission of making deploying a new chain as easy as deploying a smart contract.\\n\\nSince 2021 several projects have also started building general-purpose execution layer rollup software for various use cases. This includes [Eclipse](https://twitter.com/EclipseFND) (Solana VM rollups), [Dymension](https://twitter.com/dymensionXYZ) (settled Cosmos rollups), [Sovereign Labs](https://twitter.com/sovereign_labs) (sovereign ZK rollups), and [Optimism](https://twitter.com/optimismFND) (EVM rollups).\\n\\nTo ensure Celestia remains a decentralized and credibly neutral data availability layer that treats all rollup software as first class citizens, we decided to spin out Rollkit from Celestia Labs into its own project with its own GitHub org and docs site.\\n\\nThis also means that Rollkit aims to be neutral to the underlying data availability layer. Rollkit is designed to allow developers to integrate other data availability layers besides Celestia via the [data availability interface](https://github.com/rollkit/rollkit/blob/567b9f500db8055289365ea63450cefe4b135077/da/da.go#L60).\\n\\nThe Celestia Labs Execution Environments team is currently contributing to the initial and necessary components of Rollkit, and is calling for all developers to contribute to it.\\n\\nSpinning out Rollkit will enable both Celestia and Rollkit to serve the entire modular ecosystem as public goods that are neutral and independent from each other, and not favor each other in the modular stack.\\n\\nWe believe that to create a positive-sum crypto ecosystem where modularism thrives over maximalism, it\u2019s important that developers have access to neutral rollup frameworks that are treated as public goods. In order for crypto to move into mainstream adoption, the industry needs to work together to create foundational developer tooling that will help crypto to level up.\\n\\n## Next steps\\n\\nMoving towards a community-led project means increased visibility, transparency and inclusivity. That\u2019s why the Rollkit team will soon release a roadmap blog post to detail ongoing work and its purpose. The team will also hold regular public calls with community members to showcase recent developments, discuss the roadmap and gather feedback from developers building with Rollkit. Keep an eye out for a new announcement from Rollkit. \\n\\nLearn more about how Rollkit works [on the new Rollkit website](/) (you\'re already on it!). And don\u2019t forget to check out the [Rollkit repo](https://github.com/rollkit) too.\\n\\nLet\u2019s build modular together."}]}')}}]);